#!/bin/sh

# TODO: Randomize the exposed port

name=bitemporal-sql-example
# shellcheck disable=SC2209
user=test
# shellcheck disable=SC2209
pass=test

docker run \
    --name "$name" \
    -d \
    --rm \
    -p 5432:5432 \
    -e POSTGRES_USER="$user" -e POSTGRES_PASSWORD="$pass" \
    -v "$PWD"/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d \
    --mount type=tmpfs,destination=/var/lib/postgresql/data \
    postgres:13.2-alpine \
    -c fsync=off >/dev/null

# TODO: This does not actually always work :(
sleep 1
while ! docker exec "$name" pg_isready -q -d "$user" -U "$user" ; do
    sleep 1
done

echo Raw data:
docker exec -i "$name" psql -n -U "$user" <<EOSQL
SELECT key, value, applies_to, effective_at FROM example_p ORDER BY key, applies_to, effective_at;
EOSQL

echo Latest effective values:
docker exec -i "$name" psql -n -U "$user" <<EOSQL
SELECT key, value, applies_to FROM example_latest ORDER BY key, applies_to;
EOSQL

docker exec "$name" kill -TERM 1
